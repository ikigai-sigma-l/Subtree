@import './variable.styl'
@import '../tip.styl'
@import './components/selector/Selector.styl'
@import '../components/slider/Slider.styl'

.avplayer-ui-container {
  width: 100%
  height: 100%

  user-select: none

  color: var(--libmedia-ui-font-color)
  background-color: var(--libmedia-ui-background-color)
  text-shadow: 0 0 2px var(--libmedia-ui-text-shadow-color)

  * {
    box-sizing: border-box
    outline: none
  }

  svg {
    fill: var(--libmedia-ui-font-color)
  }

  .avplayer-ui-header {
    width: 100%
    height: var(--libmedia-ui-header-height)
    position: absolute
    top: 0
    text-align: center

    padding: 0 var(--libmedia-ui-padding)
    transition: all var(--libmedia-ui-transition-duration) ease
    background-size: 100% var(--libmedia-ui-header-height)
    background-image: linear-gradient(to bottom, #000, #0006, #0000)

    .avplayer-ui-title {
      line-height: var(--libmedia-ui-header-height)
      font-size: 16px
      max-width: 100%
      overflow: hidden
      text-overflow: ellipsis
      white-space: nowrap
    }

    a {
      position: absolute
      right: calc((var(--libmedia-ui-header-height) - 16px) / 2)
      top: calc((var(--libmedia-ui-header-height) - 16px) / 2)
      height: 16px

      svg {
        height: 16px
        width: 16px
      }
    }
  }

  .avplayer-ui-player {
    width: 100%
    height: 100%
    position: absolute
    top: 0
    left: 0
    overflow: hidden
    cursor: pointer

    canvas, video {
      background-color: #000
    }
  }

  .avplayer-ui-footer {
    padding: 0 var(--libmedia-ui-padding)
    transition: all var(--libmedia-ui-transition-duration) ease
    background-size: 100% var(--libmedia-ui-bottom-height)
    background-image: linear-gradient(to top, #000, #0006, #0000)
    flex-direction: column
    justify-content: flex-end
    width: 100%
    height: var(--libmedia-ui-bottom-height)
    display: flex
    position: absolute
    bottom: 0

    .avplayer-ui-progress-container {
      pointer-events: auto
      padding-bottom: var(--libmedia-ui-bottom-gap)
      position: relative
      transition: transform var(--libmedia-ui-transition-duration) ease
    }

    .avplayer-ui-control {
      height: var(--libmedia-ui-control-height)
      justify-content: space-between
      align-items: center
      display: flex
      position: relative
      transition: transform var(--libmedia-ui-transition-duration) ease

      .avplayer-ui-control-item {
        cursor: pointer
        white-space: nowrap
        opacity: var(--libmedia-ui-control-opacity)
        min-height: var(--libmedia-ui-control-height)
        min-width: var(--libmedia-ui-control-height)
        transition: opacity var(--libmedia-ui-transition-duration) ease
        flex-shrink: 0
        justify-content: center
        align-items: center
        display: flex
        position: relative

        svg {
          height: var(--libmedia-ui-control-icon-size)
          width: var(--libmedia-ui-control-icon-size)
          transform: scale(var(--libmedia-ui-control-icon-scale))
          transition: transform var(--libmedia-ui-transition-duration) ease
        }

        &:hover {
          cursor: pointer
          opacity: 1
        }
      }

      .avplayer-ui-footer-left {
        height: 100%
        display: flex
      }

      .avplayer-ui-footer-right {
        height: 100%
        display: flex
        justify-content: flex-end
      }
    }

    &:hover {
      .avplayer-ui-progress {
        .avplayer-ui-progress-inner .avplayer-ui-progress-indicator {
          transform: scale(1)
        }
      }
    }
  }

  .avplayer-ui-folder-container {
    position: absolute
    top: 0
    left: 0
    transition: all var(--libmedia-ui-transition-duration) ease
    width: var(--libmedia-ui-folder-width)
    bottom: calc(var(--libmedia-ui-progress-height) + var(--libmedia-ui-bottom-gap) + var(--libmedia-ui-control-height))
    box-shadow: 2px 0px 8px rgba(0, 0, 0, 0.6)
    background-color: var(--libmedia-ui-widget-background)
    border-top-right-radius: 8px
    border-bottom-right-radius: 8px

    .avplayer-ui-folder-toggle {
      width: 24px
      height: 60px
      justify-content: center
      align-items: center
      display: flex
      cursor pointer
      border-top-right-radius: 8px
      border-bottom-right-radius: 8px
      box-shadow: 2px 0px 8px rgba(0, 0, 0, 0.6)
      transition: all var(--libmedia-ui-transition-duration) ease

      position: absolute
      right: -24px
      top: 50%
      transform: translateY(-50%)
      opacity: 1

      svg {
        width: 24px
        height: 24px
        opacity: var(--libmedia-ui-control-opacity)
        transform: rotate(180deg)
      }

      &:hover {
        svg {
          opacity: 1
        }
      }
    }

    &[data-fold='1'] {
      .avplayer-ui-folder-toggle svg {
        transform: rotate(0)
      }
      transform: translateX(calc(var(--libmedia-ui-folder-width) * -1))
    }
  }

  .avplayer-ui-mask {
    pointer-events: none
    justify-content: center
    align-items: center
    width: 100%
    height: 100%
    display: flex
    position: absolute

    .avplayer-ui-state {
      opacity: 0
      width: var(--libmedia-ui-state-size)
      height: var(--libmedia-ui-state-size)
      transition: all var(--libmedia-ui-transition-duration) ease
      justify-content: center
      align-items: center
      display: flex
      transform: scale(2)

      img {
        vertical-align: top
        max-width: 100%
      }

      &[data-show='1'] {
        cursor: pointer
        pointer-events: auto
        opacity: var(--libmedia-ui-state-opacity)
        transform: scale(1)
      }
    }

    &.info {
      height: calc(100% - var(--libmedia-ui-bottom-height))
    }
    &.showSettings {
      
      height: calc(100% - var(--libmedia-ui-bottom-height))
    }
  }

  .avplayer-ui-pcm-visualization-mask {
    pointer-events: none
    justify-content: center
    align-items: center
    width: 100%
    height: 100%
    display: flex
    position: absolute
    transition: all var(--libmedia-ui-transition-duration) ease
  }

  .avplayer-ui-menu {
    position: fixed
    border-radius: var(--libmedia-ui-border-radius)
    background-color: var(--libmedia-ui-widget-background)
    transition: all var(--libmedia-ui-transition-duration) ease

    .avplayer-ui-menu-item {
      padding: 10px 60px
      font-size: 14px
      cursor: pointer
      &:hover {
        background-color: var(--libmedia-ui-widget-hover-background)
      }
    }
  }

  &[data-bar-show='0'] {

    cursor: none

    .avplayer-ui-player {
      cursor: none
    }

    .avplayer-ui-header {
      transform: translateY(calc(var(--libmedia-ui-header-height) * -1))
    }
    .avplayer-ui-footer {
      transform: translateY(var(--libmedia-ui-bottom-height))
      .avplayer-ui-progress-container {
        transform: translateY(calc((var(--libmedia-ui-bottom-height) - var(--libmedia-ui-bottom-gap) - var(--libmedia-ui-progress-height) * 0.5 - var(--libmedia-ui-control-height)) * -1))
      }
    }
    .avplayer-ui-folder-container {
      opacity: 0
      transform: translateX(calc(var(--libmedia-ui-folder-width) * -1))

      .avplayer-ui-folder-toggle {
        pointer-events: none
      }
    }

    .avplayer-ui-pcm-visualization-mask {
      background-color: rgba(0, 0, 0, 0.5)
    }
  }
}

@keyframes icon_scale {
  0% {
    transform: scale(1)
    transform-origin: center center
  }

  50% {
    transform: scale(1.2)
    transform-origin: center center
  }

  100% {
    transform: scale(1)
    transform-origin: center center
  }
}

@keyframes icon_rotate {
  0% {
    transform: rotate(0)
    transform-origin: center center
  }

  100% {
    transform: rotate(120deg)
    transform-origin: center center
  }
}